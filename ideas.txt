- idea now is to simply pick a pair
- note there are 960 possible pieces for piece a of the pair so this will need to be done possibly for all 960 to find a solution
- now for that pair piece a there is a list of piece b's so get that list
- now for each piece b in the above list do the following:
  - get the new list of piece b's and find the union of the list above
  - this union will reduce the list significantly
- my thinking is for a given pair piece a that the final unions of all the piece b union lists there will be a final union list
  of 24 pieces ... this means the original piece a plus the union list will make it a total of 25 pieces for the final solution
- So out of the 960 possible pieces for piece a there may be more then one set that has a solution but in the union lists
  because it gets reduced ... this reduction is what will find the solution..... i believe because in any given piece a from pair list
  the solution is in that list but you need to find all the unions to find the final solution.
- my wording here on how to do this is not very clear but how to do this in code is becoming clearer.
- i will implement the ability to get parts of this information out of the 2piece pair object as it will contain the information once created.
- I have now made the method words for this implementation but have not mechanized it yet! 
