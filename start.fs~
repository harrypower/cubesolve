
struct
    cell% field x
    cell% field y
    cell% field z
end-struct loc%

struct
    loc% field a
    loc% field b
    loc% field c
    loc% field d
    loc% field e
end-struct blc%


create pattern-list
pattern-list blc% %size 24 * dup allot erase

: xyz! ( x y z addr nindex -- )
    blc% %size * +
    dup rot swap z !
    dup rot swap y !
    x ! ;

: xyz@ ( addr nindex -- x y z )
    blc% %size * + dup
    x @ swap
    dup y @ swap
    z @ ;


0 0 0 pattern-list a 0 xyz!
0 1 0 pattern-list b 0 xyz!
0 2 0 pattern-list c 0 xyz!
1 2 0 pattern-list d 0 xyz!
1 3 0 pattern-list e 0 xyz!

\ pattern-list a 0 xyz@ . . .  (  this will display the xyz values in pattern a 0 )
\ pattern-list a x blc% %size 1 * + @ .  ( this will display the x value for pattern a 1 )

0 0 0 pattern-list a 1 xyz!
0 1 0 pattern-list b 1 xyz!
0 2 0 pattern-list c 1 xyz!
0 2 1 pattern-list d 1 xyz!
0 3 1 pattern-list e 1 xyz!







